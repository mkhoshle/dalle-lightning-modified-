gcloud services enable tpu.googleapis.com

gcloud alpha compute tpus tpu-vm create tpu-vm-single --zone=europe-west4-a --accelerator-type=v3-8 --version=v2-nightly-cos


gcloud alpha compute tpus tpu-vm ssh torch-vm-test --zone europe-west4-a --project lgai-vision-tpu

export XRT_TPU_CONFIG="localservice;0;localhost:51011"

mkdir source_bucket

gcsfuse lgai-vision-tpu-sources source_bucket

cp source_bucket/gan_test.py ./

cp source_bucket/requirements.txt ./

pip3 install -r requirements.txt

python3 /home/taehoon.kim/gan_test.py --restart

-------------------------------------------------


python3 -m torch_xla.core.xrt_run_server --port 51011 --restart

sudo /opt/google-cloud-sdk/bin/gcloud components update

export PROJECT_ID=lgai-vision-tpu
export TPU_NAME=tpu-vm-test
export ZONE=europe-west4-a
export RUNTIME_VERSION=v2-nightly-cos

gcloud alpha compute tpus tpu-vm create ${TPU_NAME} \
--zone ${ZONE} --project ${PROJECT_ID} --accelerator-type v3-32 \
--version ${RUNTIME_VERSION} --reserved --metadata startup-script='#! /bin/bash
cd /home/taehoon.kim/

mkdir source_bucket

mkdir coco/

gcsfuse lgai-vision-tpu-sources source_bucket

cp -r source_bucket/taming-transformers/ ./

fusermount -u /home/taehoon.kim/source_bucket/

pip3 install -r taming-transformers/requirements.txt

pip3 install git+https://github.com/PyTorchLightning/pytorch-lightning.git

mkdir temp/

chown -R taehoon.kim /home/taehoon.kim/taming-transformers/
chown -R taehoon.kim /home/taehoon.kim/temp/
chown -R taehoon.kim /home/taehoon.kim/source_bucket/
chown -R taehoon.kim /home/taehoon.kim/coco/
EOF'


gcloud alpha compute tpus tpu-vm ssh ${TPU_NAME} \
--zone ${ZONE} --project ${PROJECT_ID} 

gcloud alpha compute tpus tpu-vm ssh ${TPU_NAME} \
--zone ${ZONE} --project ${PROJECT_ID} --worker=all \
  --command "gcsfuse lgai-vision-tpu-sources source_bucket"

gcloud alpha compute tpus tpu-vm ssh ${TPU_NAME} \
--zone ${ZONE} --project ${PROJECT_ID} --worker=all \
  --command "gcsfuse lgaivision-coco-eu coco"

gcloud alpha compute tpus tpu-vm ssh ${TPU_NAME} \
--zone ${ZONE} --project ${PROJECT_ID} --worker=all \
  --command "gcsfuse lgai-vision-tpu-results temp"


gcloud compute config-ssh



python3 -m torch_xla.distributed.xla_dist --tpu=tpu-vm-pod-coco --restart-tpuvm-pod-server -- python3 /home/taehoon.kim/taming-transformers/main.py --base /home/taehoon.kim/taming-transformers/configs/coco_vqgan.yaml -t True --num_sanity_val_steps=1 


python3 -m torch_xla.distributed.xla_dist --tpu=tpu-vm-pod-32 --restart-tpuvm-pod-server -- python3 /home/taehoon.kim/minGPT/benchmark.py --n_layer 14 --n_head 16 --n_embd 3072 --precision 16 --limit_train_batches 120

python3 -m torch_xla.distributed.xla_dist --tpu=tpu-vm-pod-32 --restart-tpuvm-pod-server -- python3 boring.py

export VM_NAME=pod-ctrl-32
export ZONE=europe-west4-a



gcloud compute --project=lgai-vision-tpu instances create pod-ctrl-32\
  --zone=europe-west4-a  \
  --machine-type=n1-standard-1  \
  --image-family=torch-xla \
  --image-project=ml-images  \
  --boot-disk-size=200GB \
  --scopes=https://www.googleapis.com/auth/cloud-platform


gcloud compute config-ssh
conda activate torch-xla-1.8.1

export TPU_NAME=tpu-vm-pod-32




python3 -m torch_xla.distributed.xla_dist --tpu=tpu-vm-pod-32 --env LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libtcmalloc.so.4  -- python3 /home/taehoon.kim/gan_test_pod.py 


-------------------------
export PROJECT_ID=lgai-vision-tpu
export TPU_NAME=tpu-vm-pod-32
export ZONE=europe-west4-a
export RUNTIME_VERSION=v2-alpha

gcloud alpha compute tpus tpu-vm create ${TPU_NAME} \
--zone ${ZONE} --project ${PROJECT_ID} --accelerator-type v3-32 \
--version ${RUNTIME_VERSION}  --reserved --metadata startup-script='#! /bin/bash

su taehoon.kim/
cd /home/taehoon.kim/

mkdir source_bucket

gcsfuse lgai-vision-tpu-sources source_bucket

cp source_bucket/gan_test_pod.py ./
cp -r source_bucket/tpu_vm/ ./
cp -r source_bucket/MNIST/ ./
cp source_bucket/requirements.txt ./

pip3 install -r requirements.txt

mkdir /home/taehoon.kim/temp/

EOF'

gcloud alpha compute tpus tpu-vm ssh ${TPU_NAME} \
--zone ${ZONE} --project ${PROJECT_ID}

python3 -m torch_xla.distributed.xla_dist --tpu=tpu-vm-pod-32-1 --restart-tpuvm-pod --env LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libtcmalloc.so.4  -- python3 /gan_test_pod.py 

-----------------------------------------------------------

gcloud alpha compute tpus tpu-vm create jax \
  --zone europe-west4-a \
  --accelerator-type v3-8 \
  --version v2-alpha

gcloud alpha compute tpus tpu-vm create jax-pod-512 \
  --zone europe-west4-a \
  --accelerator-type v3-512 \
  --version v2-alpha \
  --reserved

gcloud alpha compute tpus tpu-vm ssh jax-pod-512 \
  --zone europe-west4-a \
  --worker=all \
  --command="pip3 install dm-haiku"


gcloud alpha compute tpus tpu-vm ssh jax-pod-512 \
  --zone europe-west4-a \
  --worker=all \
  --command="pip3 install matplotlib"

gcloud alpha compute tpus tpu-vm ssh jax-pod-512 \
  --zone europe-west4-a \
  --worker=all \
  --command="pip3 install optax"

gcloud alpha compute tpus tpu-vm ssh jax-pod-512 \
  --zone europe-west4-a \
  --worker=all \
  --command="pip3 install tensorflow_datasets"


gcloud alpha compute tpus tpu-vm ssh jax-pod-512 \
  --zone europe-west4-a \
  --worker=all \
  --command="gcloud source repos clone vqgan --project=lgai-vision-tpu"

gcloud alpha compute tpus tpu-vm ssh jax-pod-512 \
  --zone europe-west4-a \
  --worker=all \
  --command="python3 ./vqgan/vqvae_jax.py"  